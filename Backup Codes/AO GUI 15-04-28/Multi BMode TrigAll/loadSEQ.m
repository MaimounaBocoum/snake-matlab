function loadSEQ(hf)
% This function is a GUI part of Acousto-Optic GUI for loading US sequence

AO=guidata(hf);

%% Definition of window
USParamList = {'Volt','FreqSonde','NbHemicycle','X0','Foc','ScanLength','NTrig','Prof'};
UnSetFields = USParamList(~isfield(AO,USParamList));

if ~isempty( UnSetFields )
    for ii = 1: length( UnSetFields )
        AO.( UnSetFields{ii} ) = 0;
    end
end

AO.IsChangeParam = 0;

%load sequence button
LSEQ = uicontrol('Style', 'pushbutton',...
    'string', 'Load',...
    'Fontsize',14,...
    'units','normalized',...
    'Position',[0.4 0.05 0.25 0.07],...
    'callback',{@Load},...
    'tag','loadButton',...
    'parent',AO.hl);

% close button
CSEQ = uicontrol('Style', 'pushbutton',...
    'string', 'Close',...
    'Fontsize',14,...
    'units','normalized',...
    'Position',[0.7 0.05 0.25 0.07],...
    'callback',{@Close},...
    'tag','CloseButton',...
    'parent',AO.hl);

%load already done sequence
PathText = uicontrol('Style','text',...
    'String','Load a previous sequence or enter parameters',...
    'visible', 'on',...
    'BackgroundColor',AO.parentcolor,...
    'horizontalalignment','left',...
    'Fontsize',12,...
    'units','normalized',...
    'tag','PathText',...
    'Position',[0.05,0.9,0.9,0.05],...
    'parent',AO.hl);

PathEdit = uicontrol('Style','edit',...
    'string','',...
    'Fontsize',12,...
    'visible', 'on',...
    'enable','off',...
    'units','normalized',...
    'Position',[0.05,0.85,0.75,0.05],...
    'tag','Path',...
    'parent',AO.hl);

browseButton = uicontrol('Style', 'pushbutton',...
    'string', 'Browse',...
    'Fontsize',12,...
    'BackgroundColor',AO.parentcolor,...
    'visible', 'on',...
    'units','normalized',...
    'Position',[0.80,0.85,0.15,0.05],...
    'callback',{@browse},...
    'tag','browseButton',...
    'parent',AO.hl);

% param buttons
FocText = uicontrol('Style','text',...
    'String','US Focus depth (mm)',...
    'BackgroundColor',AO.parentcolor,...
    'horizontalalignment','center',...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.05 0.7 0.5 0.05],...
    'parent',AO.hl);

FocEdit = uicontrol('Style','edit',...
    'string',AO.Foc,...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.55 0.7 0.3 0.05],...
    'tag','Foc',...
    'callback', {@checkValue},...
    'parent',AO.hl);

VoltText = uicontrol('Style','text',...
    'String','US tension (V)',...
    'horizontalalignment','center',...
    'BackgroundColor',AO.parentcolor,...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.05 0.63 0.5 0.05],...
    'parent',AO.hl);

VoltEdit = uicontrol('Style','edit',...
    'string',AO.Volt,...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.55 0.63 0.3 0.05],...
    'callback', {@checkValue},...
    'tag','Volt',...
    'parent',AO.hl);

FreqText = uicontrol('Style','text',...
    'String','Probe frequency (MHz)',...
    'horizontalalignment','center',...
    'BackgroundColor',AO.parentcolor,...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.05 0.56 0.5 0.05],...
    'parent',AO.hl);

FreqEdit = uicontrol('Style','edit',...
    'string',AO.FreqSonde,...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.55 0.56 0.3 0.05],...
    'tag','FreqSonde',...
    'callback', {@checkValue},...
    'parent',AO.hl);

HemicycleText = uicontrol('Style','text',...
    'String','Number of hemicycles',...
    'BackgroundColor',AO.parentcolor,...
    'horizontalalignment','center',...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.05 0.49 0.5 0.05],...
    'parent',AO.hl);

HemicycleEdit = uicontrol('Style','edit',...
    'string',AO.NbHemicycle,...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.55 0.49 0.3 0.05],...
    'tag','NbHemicycle',...
    'callback', {@checkValue},...
    'parent',AO.hl);

X0Text = uicontrol('Style','text',...
    'String','X0 (mm)',...
    'BackgroundColor',AO.parentcolor,...
    'horizontalalignment','center',...
    'Fontsize',12,...
    'units','normalized',...
    'tag','X0Text',...
    'Position',[0.05 0.42 0.5 0.05],...
    'parent',AO.hl);

X0Edit = uicontrol('Style','edit',...
    'string',AO.X0,...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.55 0.42 0.3 0.05],...
    'tag','X0',...
    'callback', {@checkValue},...
    'parent',AO.hl);

WidthXText = uicontrol('Style','text',...
    'String','Width along X (mm)',...
    'Visible','on',...
    'BackgroundColor',AO.parentcolor,...
    'horizontalalignment','center',...
    'Fontsize',12,...
    'units','normalized',...
    'tag','WidthXText',...
    'Position',[0.05 0.35 0.5 0.05],...
    'parent',AO.hl);

WidthXEdit = uicontrol('Style','edit',...
    'string', AO.ScanLength,...
    'Visible','on',...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.55 0.35 0.3 0.05],...
    'tag','ScanLength',...
    'callback', {@checkValue},...
    'parent',AO.hl);


USDepthText = uicontrol('Style','text',...
    'String','Depth in US direction (mm)',...
    'Visible','on',...
    'BackgroundColor',AO.parentcolor,...
    'horizontalalignment','center',...
    'Fontsize',12,...
    'units','normalized',...
    'tag','USDepthText',...
    'Position',[0.05 0.27 0.5 0.07],...
    'parent',AO.hl);

USDepthEdit = uicontrol('Style','edit',...
    'string',AO.Prof,...
    'Visible','on',...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.55 0.28 0.3 0.05],...
    'tag','Prof',...
    'callback', {@checkValue},...
    'parent',AO.hl);

NtrigText = uicontrol('Style','text',...
    'String','Number of averaging',...
    'horizontalalignment','center',...
    'BackgroundColor',AO.parentcolor,...
    'Fontsize',12,...
    'units','normalized',...
    'tag','NtrigText',...
    'Position',[0.05 0.21 0.5 0.05],...
    'parent',AO.hl);

NtrigEdit = uicontrol('Style','edit',...
    'string',AO.NTrig,...
    'Fontsize',12,...
    'units','normalized',...
    'Position',[0.55 0.21 0.3 0.05],...
    'tag','Ntrig',...
    'callback', {@checkValue},...
    'parent',AO.hl);

guidata(hf,AO)

    function Load(source,eventdata)
        AO.Volt        = str2double(get(VoltEdit,'string'));
        AO.FreqSonde   = str2double(get(FreqEdit,'string'));
        AO.NbHemicycle = str2double(get(HemicycleEdit,'string'));
        AO.X0          = str2double(get(X0Edit,'string'));
        AO.Foc         = str2double(get(FocEdit,'string'));
        AO.ScanLength  = str2double(get(WidthXEdit,'string'));
        AO.NTrig       = str2double(get(NtrigEdit,'string'));
        AO.Prof        = str2double(get(USDepthEdit,'string'));
        
        [AO.SEQ]=AOSeqInit_FOC( AO );
% [AO.SEQ]=AOSeqInit_FOCv2( AO );
%         [~,~,~,AO.SEQ]=AOSeqInit_FOC( AO );
        
        set(AO.LOADED,'visible','on')
        set(AO.starttmp,'visible','off')
        set(AO.start,'visible','on')
        set(AO.SRText,'visible','on')
        set(AO.SREdit,'visible','on')
        set(AO.RangeText,'visible','on')
        set(AO.RangeEdit,'visible','on')
        guidata(hf,AO)

    end

    function Close(source,eventdata)
        set(AO.hl,'visible','off')
    end

    function browse(source,eventdata)
        [filename,dir,FilterIndex] = uigetfile('D:\AcoustoOptique\SEQdir\SEQ_Foc*.mat','Select a sequence');
        if FilterIndex
            load([dir filename],'CP');
            set(PathEdit,'string',filename)
            set(FocEdit,'string',CP.PosZ)
            set(VoltEdit,'string',CP.ImgVoltage)
            set(FreqEdit,'string',CP.TwFreq)
            set(HemicycleEdit,'string',CP.NbHcycle)
            set(X0Edit,'string',CP.PosX)
            set(WidthXEdit,'string',CP.ScanLength)
            set(USDepthEdit,'string',CP.Prof )
            set(NtrigEdit,'string',CP.Repeat)
        end
    end

    function checkValue(source,eventdata)
        
        if isnan(str2double(get(source,'string')))
            display('ERROR : Must enter a numeric value')
            set(source,'string','0')
            return
        end
        
        if str2double(get(source,'string'))<0
            display('ERROR : Must enter a positive value')
            set(source,'string','0')
            return
        end
        
        if strcmp(get(source,'tag'),'Volt') || strcmp(get(source,'tag'),'Freq')
            if str2double(get(FreqEdit,'string'))==15 && str2double(get(VoltEdit,'string'))>25
                display('ERROR : Max voltage 25V')
                switch get(source,'tag')
                    case 'Volt'
                        set(source,'string','25')
                    case 'Freq'
                        set(source,'string','0')
                end
            end
        end
        
        if strcmp(get(source,'tag'),'Hemicycle') && str2double(get(source,'string'))>20
            display('ERROR : US impulse is too long')
            set(source,'string','20')
        end
        
        if strcmp(get(source,'tag'),'X0') || strcmp(get(source,'tag'),'WidthX')
            tmp=get(source,'string');
            switch get(source,'tag')
                case 'X0'
                    if str2double(tmp)>system.probe.NbElemts*system.probe.Pitch
                        display('ERROR : Scan starting position can''t exceed probe length')
                        set(source,'string',num2str(system.probe.NbElemts*system.probe.Pitch))
                    elseif str2double(tmp)+str2double(get(WidthXEdit,'string'))>system.probe.NbElemts*system.probe.Pitch
                        display('ERROR : Scan exceeds probe length')
                        set(WidthXEdit,'string',num2str(system.probe.NbElemts*system.probe.Pitch-str2double(tmp)))
                    end
                case 'WidthX'
                    if str2double(tmp)+str2double(get(X0Edit,'string'))>system.probe.NbElemts*system.probe.Pitch
                        display('ERROR : Scan exceeds probe length')
                        set(WidthXEdit,'string',num2str(system.probe.NbElemts*system.probe.Pitch-str2double(get(X0Edit,'string'))))
                    end
            end
        end
        
    end

end