% REMOTE.FC.INITIALIZE (PROTECTED)
%   Create a REMOTE.FC instance.
%
%   OBJ = OBJ.INITIALIZE(NAME, DESC, DEBUG) creates a REMOTE.FC instance with
%   its name and description values set to NAME and DESC (character values) and
%   using the DEBUG value (1 is enabling the debug mode).
%
%   OBJ = OBJ.INITIALIZE(NAME, DESC, PARNAME, PARVALUE, ..., DEBUG) creates a
%   REMOTE.FC instance with parameters PARSNAME set to PARSVALUE.
%
%   Dedicated parameters:
%     - BANDWIDTH (int32) sets the digital filter coefficients.
%       -1 = none, [0 100] = pre-calculated - default = 100
%
%   Note - This function is defined as a method of the remoteclass REMOTE.FC. It
%   cannot be used without all methods of the remoteclass REMOTE.FC and all
%   methods of its superclass COMMON.REMOTEOBJ developed by SuperSonic Imagine
%   and without a system with a REMOTE server running.
%
%   Copyright 2010 Supersonic Imagine
%   Revision: 1.00 - Date: 2010/07/28

function obj = initialize(obj, varargin)

% ============================================================================ %
% ============================================================================ %

current_class = 'remote.fc';

% Start error handling
try

% ============================================================================ %
% ============================================================================ %

% Initialize COMMON.REMOTEOBJ superclass
obj = initialize@common.remoteobj(obj, varargin{1:end});

% ============================================================================ %
% ============================================================================ %

%% Add new parameters

% Definition of the digital filter coefficients (default = 100)
Par = common.parameter( ...
    'Bandwidth', ...
    'int32', ...
    'sets the digital filter coefficients', ...
    {-1 [0 100]}, ...
    {'FIR BP coeffs for impulse', 'Load pre-calculated FIR BP coeffs'}, ...
    obj.Debug, current_class );
Par = Par.setValue(100);
obj = obj.addParam(Par);

% ============================================================================ %
% ============================================================================ %

%% Pre-calculated filter coefficients

obj.DABFilterCoeff = ...
    [0.34, -0.01428001,  0.03701087, -0.07746932, 0.12377146, -0.16035465, ...
        0.17422732; ...
	 0.35, -0.01185857,  0.03352994, -0.07467903, 0.12440498, -0.16511546, ...
        0.18082399; ...
     0.36, -0.01008361,  0.03085511, -0.07242428, 0.12479827, -0.16882415, ...
        0.18602907; ...
     0.37, -0.00841101,  0.02822615, -0.07011103, 0.12510188, -0.17251551, ...
        0.19126878; ...
     0.38, -0.00663942,  0.02530879, -0.06742468, 0.12533593, -0.17667090, ...
        0.19724051; ...
     0.39, -0.00537942,  0.02313832, -0.06534058, 0.12543567, -0.17980627, ...
        0.20179942; ...
     0.40, -0.00394939,  0.02055965, -0.06276142, 0.12546356, -0.18358600, ...
        0.20735991; ...
     0.41, -0.00292292,  0.01862587, -0.06075377, 0.12541930, -0.18646054, ...
        0.21163515; ...
     0.42, -0.00171188,  0.01623286, -0.05817063, 0.12527612, -0.19007306, ...
        0.21707083; ...
     0.43, -0.00072331,  0.01417220, -0.05585188, 0.12506749, -0.19323818, ...
        0.22189385; ...
     0.44,  0.00017587,  0.01220300, -0.05355347, 0.12479268, -0.19631156, ...
        0.22663030; ...
     0.45,  0.00097741,  0.01035532, -0.05131764, 0.12446176, -0.19924302, ...
        0.23119931; ...
     0.46,  0.00168902,  0.00862416, -0.04914578, 0.12408004, -0.20203700, ...
        0.23560405; ...
     0.47,  0.00241833,  0.00673895, -0.04668796, 0.12357730, -0.20513773, ...
        0.24055275; ...
     0.48,  0.00301111,  0.00511279, -0.04449129, 0.12307102, -0.20786129, ...
        0.24494940; ...
     0.49,  0.00356184,  0.00348963, -0.04220887, 0.12247970, -0.21063820, ...
        0.24949085; ...
     0.50,  0.00407072,  0.00187509, -0.03984974, 0.12180564, -0.21345912, ...
        0.25416223; ...
     0.51,  0.00453631,  0.00027426, -0.03741833, 0.12104723, -0.21631809, ...
        0.25895676; ...
     0.52,  0.00488748, -0.00104597, -0.03533254, 0.12034241, -0.21873084, ...
        0.26305532; ...
     0.53,  0.00524651, -0.00253694, -0.03288117, 0.11945114, -0.22152188, ...
        0.26785852; ...
     0.54,  0.00551371, -0.00378965, -0.03073036, 0.11861081, -0.22393078, ...
        0.27206281; ...
     0.55,  0.00577283, -0.00519196, -0.02821247, 0.11755836, -0.22670568, ...
        0.27697654; ...
     0.56,  0.00596905, -0.00645577, -0.02583649, 0.11650057, -0.22928335, ...
        0.28160881; ...
     0.57,  0.00612491, -0.00771306, -0.02335585, 0.11532745, -0.23193284, ...
        0.28644365; ...
     0.58,  0.00623698, -0.00896288, -0.02075771, 0.11402333, -0.23466399, ...
        0.29150965; ...
     0.59,  0.00629501, -0.01006479, -0.01833627, 0.11273581, -0.23716933, ...
        0.29623676; ...
     0.60,  0.00630968, -0.01106880, -0.01600287, 0.11142750, -0.23954775, ...
        0.30080072; ...
     0.61,  0.00628522, -0.01202629, -0.01364490, 0.11003742, -0.24191681, ...
        0.30542475; ...
     0.62,  0.00620512, -0.01310547, -0.01079928, 0.10826701, -0.24473119, ...
        0.31102620; ...
     0.63,  0.00609483, -0.01394832, -0.00839973, 0.10669066, -0.24706637, ...
        0.31577276; ...
     0.64,  0.00594663, -0.01473431, -0.00598770, 0.10502819, -0.24938020, ...
        0.32056968; ...
     0.65,  0.00576137, -0.01546047, -0.00356736, 0.10327867, -0.25166891, ...
        0.32541378; ...
     0.66,  0.00554012, -0.01612402, -0.00114306, 0.10144137, -0.25392879, ...
        0.33030183; ...
     0.67,  0.00528417, -0.01672235,  0.00128069, 0.09951582, -0.25615612, ...
        0.33523055; ...
     0.68,  0.00499503, -0.01725303,  0.00369923, 0.09750173, -0.25834725, ...
        0.34019662; ...
     0.69,  0.00467440, -0.01771388,  0.00610777, 0.09539910, -0.26049859, ...
        0.34519674; ...
     0.70,  0.00432421, -0.01810294,  0.00850139, 0.09320813, -0.26260661, ...
        0.35022760; ...
     0.71,  0.00394659, -0.01841849,  0.01087508, 0.09092930, -0.26466789, ...
        0.35528595; ...
     0.72,  0.00354384, -0.01865910,  0.01322376, 0.08856330, -0.26667912, ...
        0.36036857; ...
     0.73,  0.00311845, -0.01882363,  0.01554229, 0.08611110, -0.26863711, ...
        0.36547232; ...
     0.74,  0.00267305, -0.01891122,  0.01782550, 0.08357390, -0.27053881, ...
        0.37059413; ...
     0.75,  0.00224115, -0.01892368,  0.01992391, 0.08112697, -0.27226372, ...
        0.37539610; ...
     0.76,  0.00182807, -0.01887563,  0.02184163, 0.07878742, -0.27382122, ...
        0.37987338; ...
     0.77,  0.00134169, -0.01874522,  0.02399816, 0.07601989, -0.27554986, ...
        0.38503065; ...
     0.78,  0.00084656, -0.01853752,  0.02609981, 0.07317412, -0.27721205, ...
        0.39019544; ...
     0.79,  0.00037007, -0.01826949,  0.02804532, 0.07039568, -0.27873112, ...
        0.39511618; ...
     0.80, -0.00005896, -0.01797353,  0.02974135, 0.06785172, -0.28004034, ...
        0.39952770; ...
     0.81, -0.00056176, -0.01755352,  0.03166266, 0.06479909, -0.28150458, ...
        0.40470149; ...
     0.82, -0.00106103, -0.01706069,  0.03351066, 0.06167811, -0.28289488, ...
        0.40987466; ...
     0.83, -0.00153838, -0.01651634,  0.03522757, 0.05859294, -0.28417056, ...
        0.41488404; ...
     0.84, -0.00194371, -0.01599827,  0.03665213, 0.05588682, -0.28521777, ...
        0.41920418; ...
     0.85, -0.00241611, -0.01531220,  0.03827108, 0.05259035, -0.28639310, ...
        0.42436743; ...
     0.86, -0.00287290, -0.01456245,  0.03980063, 0.04923789, -0.28748987, ...
        0.42952482; ...
     0.87, -0.00331112, -0.01375211,  0.04123709, 0.04583301, -0.28850732, ...
        0.43467550; ...
     0.88, -0.00372067, -0.01290123,  0.04255415, 0.04244304, -0.28942906, ...
        0.43972519; ...
     0.89, -0.00405071, -0.01213906,  0.04359866, 0.03953200, -0.29015216, ...
        0.44400568; ...
     0.90, -0.00441850, -0.01118788,  0.04474529, 0.03603686, -0.29093709, ...
        0.44908141; ...
     0.91, -0.00476185, -0.01018055,  0.04580014, 0.03246710, -0.29165045, ...
        0.45420257; ...
     0.92, -0.00507415, -0.00913052,  0.04674686, 0.02886279, -0.29228259, ...
        0.45931569; ...
     0.93, -0.00535307, -0.00804205,  0.04758233, 0.02522775, -0.29283306, ...
        0.46442099; ...
     0.94, -0.00559728, -0.00692035,  0.04830630, 0.02156648, -0.29330335, ...
        0.46951905; ...
     0.95, -0.00580520, -0.00577010,  0.04891714, 0.01788296, -0.29369385, ...
        0.47461045; ...
     0.96, -0.00597551, -0.00459613,  0.04941353, 0.01418116, -0.29400501, ...
        0.47969593; ];

% ============================================================================ %
% ============================================================================ %

%% End error handling
catch Exception
    
    % Exception in this method
    if ( isempty(Exception.identifier) )
        
        % Emit the new exception
        NewException = ...
            common.legHAL.GetException(Exception, class(obj), 'initialize');
        throw(NewException);

    % Re-emit previous exception
    else
        
        rethrow(Exception);
        
    end
    
end

% ============================================================================ %
% ============================================================================ %

end