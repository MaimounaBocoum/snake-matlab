%% Definition of LTE sequence

% Initialization
clear all; close all; clc; clear classes;

% Create LTE
LTE = usse.lte();

% Add HIFU events without acquisition
LTE = LTE.addHifu( ...
    'HifuFreq', 1.2, ...
    'FiringDuration', 1, ...
    'TransmitElemts', 1:system.hardware.NbTxChan, ...
    'Phase', 0, ...
    'MaxDuty', 0.9, ...
    'RxFreq', 45, ...
    'AcqDuration', 0, ...
    'RcvElemts', 1:20:256, ... % [1 129 11 139]
    'TriggerMode', 0, ...
    'TgcControlPts', 950/8 * (1:8), ...
    'Repeat', 21);

% Add HIFU events with acquisition
LTE = LTE.addHifu( ...
    'HifuFreq', 1.2, ...
    'FiringDuration', 0.001, ...
    'TransmitElemts', 1:system.hardware.NbTxChan, ...
    'Phase', 0, ...
    'MaxDuty', 0.9, ...
    'RxFreq', 45, ...
    'AcqDuration', 91e-6, ...
    'RcvElemts', 1:20:256, ... % [1 129 11 139]
    'TriggerMode', 0, ...
    'TgcControlPts', 950/8 * (1:8), ...
    'Repeat', 1);
    
% Add imaging events
LTE = LTE.addImaging( ...
    'TrFreq', 1, ...
    'NCycles', 3, ...
    'TransmitElemts', 1:256, ...
    'Delays', zeros(1,256), ...
    'MaxDuty', 0.1, ...
    'RxFreq', 20, ...
    'AcqDuration', 51.1, ...
    'RcvElemts', 1:10:256, ...
    'TgcControlPts', 950/8 * (1:8), ...
    'TriggerMode', 0, ...
    'Repeat', 4);

% Build the REMOTE structure
[LTE NbAcq] = LTE.buildRemote();

%% Sequence execution

% Initialize & load sequence remote
LTE = LTE.initializeRemote('IPaddress', '192.168.1.56');
LTE = LTE.loadSequence();

% Start sequence
LTE = LTE.startSequence();

% Retrieve data
for k = 1 : NbAcq
    buffer(k) = LTE.getData();
end

% Stop sequence
LTE = LTE.stopSequence('Wait', 0);
